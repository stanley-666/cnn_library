import numpy as np

arr = np.array([
                [ 75, 9,-5,-4, 1,-3, 0, 7,47, 1, 5,54, -47, -3,-2,37, 4, 3,55, 5,-1,60,-5,87,-1, 2, 58, 6, 1,53, 0, -24],
               [ 66, 0, 7, 5,-3, 4,-7,-1,43, 6,-6,54, -11, -3,-4,33,-6, 2,63,-2, -29,76, 3,39,-3, 2, 50,-2, 6,54, 1,-2],
               [ 44,-3, 1, 0,-8, 8, 8,-2,32,-5, 5,78,80,0,-6,54,-3, 3,97, 6, -21,60,-2,-3, 7,-1, 69,-2,-9,36,-7,70],
               [ 66,-8, 3,-3,-3, 6,-8, 2,44,-2, 6,70, -38, -2,-7,46,-1,-3,74,-8,-1,33, 7,83,-2,-3, 69, 0, 3,75, 9,-8],
               [56, 9, 4, 0, 7,-6,-7, 6,40,-7,-7,92,26, -3, 2,50, 4, 6,95, 6, -31,21, 3,28, 0, 8, 68,-7, 8,72, 5,48],
               [14,-1,-3,-8, 6,-1,-4,-2,34, 1, 8,96, 114, -2, 8,61, 1,-3, 108, 6, -12, 0, 8, -20,-8,-6, 80,-4,-5,49, 1,94],
               [ 28, 1,-1,-1,-6, 7,-6,-7, 0, 6, 0,83, -15,0, 9,63, 3,-7,56, 4, 2, -30,-7,68, 5, 6, 76, 0, 3,85,-9,15],
               [ 23, 4,-6, 5, 8,-3, 3, 2,-9,-1,-4, 102,15, -2, 2,71, 0,-2,88,-9, -12, -41,-8,34, 2, 0, 81, 6, 1,76, -12,76],
               [-11,-4, 4,-3,-1, 0, 7, 4, -14,-3,-5,90, 104,7,-7,76, 1, 7,86,-7, -11, -67,-8, -24,-7,-5, 72,-5, 2,61,-6, 127]
               ]);

arr = arr.T.reshape(32, 1, 3, 3)

def to_c_array(arr, name="cnn_conv_1_w"):
    outC, inC, kH, kW = arr.shape
    s = f"static const float {name}[{outC}][{inC}][{kH}][{kW}] = {{\n"
    for oc in range(outC):
        s += "  {\n"
        for ic in range(inC):
            s += "    {\n"
            for kh in range(kH):
                row = ", ".join(f"{arr[oc, ic, kh, kw]:.6f}" for kw in range(kW))
                s += f"      {{{row}}}"
                if kh != kH-1:
                    s += ",\n"
                else:
                    s += "\n"
            s += "    }"
            if ic != inC-1:
                s += ",\n"
            else:
                s += "\n"
        s += "  }"
        if oc != outC-1:
            s += ",\n"
        else:
            s += "\n"
    s += "};\n"
    return s

# 用法
c_array_string = to_c_array(arr, name="cnn_conv_1_w")
print(c_array_string)
